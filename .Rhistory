### Run MCMC Analysis using jags
library(R2jags)
library(rstan)
library(rjags)
dyn.load(file, DLLpath = DLLpath, ...)
library("jagsUI", lib.loc="~/Library/R/3.5/library")
detach("package:jagsUI", unload=TRUE)
library("R2jags", lib.loc="~/Library/R/3.5/library")
library("R2WinBUGS", lib.loc="~/Library/R/3.5/library")
library("rjags", lib.loc="~/Library/R/3.5/library")
library("jagsUI", lib.loc="~/Library/R/3.5/library")
update.packages("jagsUI")
update.packages("rjags")
update.packages("r2jags")
library(R2jags)
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/3/rjags_3-2.tar.gz",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
"
)
devtools::install_url("https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Mac%20OS%20X/",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
"
)
remove.packages("rjags", lib="~/Library/R/3.5/library")
remove.packages("jagsUI", lib="~/Library/R/3.5/library")
remove.packages("R2jags", lib="~/Library/R/3.5/library")
library("rjags", lib.loc="~/Library/R/3.5/library")
remove.packages("rjags", lib="~/Library/R/3.5/library")
library("R2WinBUGS", lib.loc="~/Library/R/3.5/library")
library("R2jags", lib.loc="~/Library/R/3.5/library")
install.packages("rjags")
library("rjags", lib.loc="~/Library/R/3.5/library")
remove.packages("rjags", lib="~/Library/R/3.5/library")
remove.packages("R2jags", lib="~/Library/R/3.5/library")
install.packages("jagsUI")
library(jagsUI)
library("jagsUI", lib.loc="~/Library/R/3.5/library")
install.packages("~/Downloads/JAGS-4.3.0.dmg", repos = NULL)
library("jagsUI", lib.loc="~/Library/R/3.5/library")
detach("package:jagsUI", unload=TRUE)
remove.packages("jagsUI", lib="~/Library/R/3.5/library")
library("rjags", lib.loc="~/Library/R/3.5/library")
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/4/rjags_4-4.tar.gz")
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/4/rjags_4-4.tar.gz")
library(rjags)
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/4/rjags_4-4.tar.gz",)
remove.packages("rjags", lib="~/Library/R/3.5/library")
library(geosphere)
daylength(45,59)
daylength(45,59+61)
## Estimate reduction in urbanization ("Z") required to reach 40% PSM for a particular site.
## Goal is to map change in Z required to reach threshold PSM and relate it to benefits of interest
## Potential benefits include:
## 1. Number of coho
## 2. Presence of spawning/rearing coho and/or other slamon species
## 2. Numer of other salmon species
## 3. Number of stream species (biodiversity)
## 4. Number of ESA-protected stocks
## 5. Number of people living 1ithin 1 km of the stream
## Started by Ailene 1 May 2019
## ailene.ettinger@noaa.gov
#################################################################
#################################################################
## housekeeping
rm(list=ls())
options(device = ifelse(.Platform$OS.type == "windows", "windows", "quartz"))
options(stringsAsFactors = FALSE)
## libraries
library(here)
library(dplyr)
library(RColorBrewer)
library(colorRamps)
#here is choosing the wrong path for me and the below set_here not working either..
#set_here(path="/Users/ailene.ettinger/Documents/GitHub/cohoPSM")
## Step 1:  Read in the data/model estimates
psm_pre <- read.table(here("analysis","results","PSM_predictions.txt"), header=TRUE)
spawn <- read.csv(here("data","spawner_data.csv"), header=TRUE)
spatial_pred <- read.csv(here("data","spatial_data_predict.csv"), header=TRUE)
spatial<- read.csv(here("data","spatial_data.csv"), header=TRUE)
salmon <- read.csv(here("data","salmonscape","WA_integrated_Fish_dist_with_WADOE_basins.csv"),header=TRUE)
## Estimate reduction in urbanization ("Z") required to reach 40% PSM for a particular ID.
## Goal is to map change in Z required to reach threshold PSM and relate it to benefits of interest
## Potential benefits include:
## 1. Number of coho
## 2. Presence of spawning/rearing coho and/or other slamon species
## 2. Numer of other salmon species
## 3. Number of stream species (biodiversity)
## 4. Number of ESA-protected stocks
## 5. Number of people living 1ithin 1 km of the stream
## Started by Ailene 1 May 2019
## ailene.ettinger@noaa.gov
#################################################################
#################################################################
## housekeeping
rm(list=ls())
options(device = ifelse(.Platform$OS.type == "windows", "windows", "quartz"))
options(stringsAsFactors = FALSE)
## libraries
library(here)
library(dplyr)
library(RColorBrewer)
library(colorRamps)
## Step 1:  Read in the data/model estimates- use only predicted attributes for now
psm_pre <- read.table(here("analysis","results","PSM_predictions.txt"), header=TRUE)
spawn <- read.csv(here("data","spawner_data.csv"), header=TRUE)
spatial_pred <- read.csv(here("data","spatial_data_predict.csv"), header=TRUE)
#spatial<- read.csv(here("data","spatial_data.csv"), header=TRUE)
salmon <- read.csv(here("data","salmonscape","WA_integrated_Fish_dist_with_WADOE_basins.csv"),header=TRUE)
## Step 2: Choices: select the threshold psm and you want to use, and select all IDs or only IDs for which we have PSM data (rather than predicted PSM)
input <- as.data.frame(NA)
input$psm_thresh <- 0.25
predsites <- TRUE #if false, selects out only IDs with PSM calculated from field data, rather than IDs with predicted PSM too
## Step 3: combine all the data and prep for plotting calculate mean spawner abundance by ID, across years
## combined data file with things we want to plot is called "d"
source(here("analysis","source","prepforplots.R"))
#source ("../analysis/source/prepforplots.R")
dim(d)
## Step 4. Plot Change in Z on x-axis and benefits of interest on the y axis
#dev.new(height=8,width=16)
pdf(here("analysis","results","testdeltaZvsbenefitsfig.pdf"), width = 16, height = 8)
quartz(height=16,width=16)
par(mfrow=c(2,2))
#make a blank plot with the prioritization scheme
plot(psm_pre$Z_mean[1:51],d$p_psm_mean[1:51], pch=19, col="white", yaxt='n',xaxt='n',cex.lab=1.5,cex.axis=1.5,cex=1.52,
xlab="Urbanization", ylab= "Benefit/Biological attribute of interest")
mtext(side=1,"high",line=3,adj=1,cex=0.8)
mtext(side=1,"low",line=3,adj=0,cex=0.8)
mtext(side=3,"Restoration",line=-4,adj=.9,cex=1.2)
mtext(side=3,"Conservation",line=-4,adj=.1,cex=1.2)
mtext(side=1,"No action needed",line=-4,adj=.1,cex=1.2)
mtext(side=1,"Low Ecological Priority",line=-4,adj=.9,cex=1.2)
#plot relationship of PSM and Z
plot(psm_pre$Z_mean[1:51],psm_pre$p_psm_mean[1:51],pch=19, col="gray", cex.lab=1.2,cex.axis=1.2,cex=1.52,
xlab="Urbanization score (Z)", ylab= "Pre-Spawn Mortality")
abline(h=input$psm_thresh, lty=2, lwd=2)
text(min(d$Z_mean, na.rm=TRUE)+1,input$psm_thresh+.02,label="PSM threshold", cex=1.2)
abline(v=Zcrit, lty=2, lwd=2, col="blue")
#text(psm_pre3$p.psm.mean, psm_pre3$Z.mean, labels=as.numeric(as.factor(psm_pre3$ID)),cex=0.8, font=2)
polygon(c(Zcrit,Zcrit,max(d$Z_mean, na.rm=TRUE)+.5,max(d$Z_mean, na.rm=TRUE)+.5),c(input$psm_thresh,1,1,input$psm_thresh),
col=adjustcolor("salmon",alpha.f=0.5),
border=NA)
text(Zcrit+.04,.02,label="Zcrit", col="blue",cex=1.2)
mtext(side=1,"high",line=3,adj=1,cex=0.8)
mtext(side=1,"low",line=3,adj=0,cex=0.8)
#mtext(side=3,"Restoration",line=0,adj=1,cex=0.8)
#mtext(side=3,"Conservation",line=0,adj=0,cex=0.8)
#Plot meters of coho spawning and number of species present, number of species spawning
#quartz()
#par(mfrow=c(1,2))
#plot meters of stream with coho present
#Give each ID a score
#standardizing the effort and the benefit, so that they are equally weighted...we can decide if we want to weight things differently.
d$Coho_Pres_stan<-(d$Coho_Presence_m-mean(d$Coho_Presence_m, na.rm=TRUE))/sd(d$Coho_Presence_m, na.rm=TRUE)
dxy<-subset(d,select=c(Z_mean,Coho_Pres_stan))
score<-as.matrix(dist(rbind(c(0,max(dxy$Coho_Pres_stan,na.rm=TRUE)),dxy), method="euclidean"))[1,-1]
dxy<-cbind(d$ID,dxy,d$Coho_Presence_m,score)
dxy<-dxy[order(dxy$score),]
myPalette <- colorRampPalette(brewer.pal(9, "YlGnBu")) #### Gives us a heat map look
cols = myPalette(length(score))
dxy<- data.frame(cbind(dxy,cols))
colnames(dxy)[1:4]<-c("ID","Z","benefit.stan","benefit")
plot(dxy$Z,dxy$benefit, cex=1.5,cex.lab=1.2,cex.axis=1.2,xlab="Urbanization", ylab= "Benefit = m stream with coho present", type="p", pch=d$psmshape, col=dxy$cols)
#text(d$Z_mean, d$Presence..m, labels=as.numeric(as.factor(d$ID)),cex=0.8, font=2)
#polygon(c(Zcrit,Zcrit,max(dxy$Z, na.rm=TRUE),max(dxy$Z, na.rm=TRUE)),
#        c(min(dxy$benefit, na.rm=TRUE),max(dxy$benefit, na.rm=TRUE),max(dxy$benefit, na.rm=TRUE),min(dxy$benefit, na.rm=TRUE)),col=adjustcolor("salmon",alpha.f=0.5),
#        border=NA)
abline(v=Zcrit, lty=2, lwd=2, col="blue")
#mtext(side=3,"Restoration",line=-2,adj=1,cex=0.8)
#mtext(side=3,"Conservation",line=-2,adj=0,cex=0.8)
mtext(side=1,"high",line=4,adj=1,cex=0.8)
mtext(side=1,"low",line=4,adj=0,cex=0.8)
score_cohopres_m<-dxy
legend("topleft", legend=c("Lowest priority","Highest priority"), pch=19,col=c(cols[length(cols)],cols[1]), cex=.8)
dxy<-subset(d,select=c(Z_mean,nsp_pres))
score<-as.matrix(dist(rbind(c(Zcrit,max(dxy$nsp_pres,na.rm=TRUE)),dxy), method="euclidean"))[1,-1]
dxy<-cbind(d$ID,dxy,d$nsp_pres,score)
dxy<-dxy[order(dxy$score),]
myPalette <- colorRampPalette(brewer.pal(9, "YlGnBu")) #### Gives us a heat map look
cols = myPalette(length(score))
dxy<- data.frame(cbind(dxy,cols))
colnames(dxy)[1:4]<-c("ID","Z","benefit.stan","benefit")
## Estimate reduction in urbanization ("Z") required to reach 40% PSM for a particular ID.
## Goal is to map change in Z required to reach threshold PSM and relate it to benefits of interest
## Potential benefits include:
## 1. Number of coho
## 2. Presence of spawning/rearing coho and/or other slamon species
## 2. Numer of other salmon species
## 3. Number of stream species (biodiversity)
## 4. Number of ESA-protected stocks
## 5. Number of people living 1ithin 1 km of the stream
## Started by Ailene 1 May 2019
## ailene.ettinger@noaa.gov
#################################################################
#################################################################
## housekeeping
rm(list=ls())
options(device = ifelse(.Platform$OS.type == "windows", "windows", "quartz"))
options(stringsAsFactors = FALSE)
## libraries
library(here)
library(dplyr)
library(RColorBrewer)
library(colorRamps)
## Step 1:  Read in the data/model estimates- use only predicted attributes for now
psm_pre <- read.table(here("analysis","results","PSM_predictions.txt"), header=TRUE)
spawn <- read.csv(here("data","spawner_data.csv"), header=TRUE)
spatial_pred <- read.csv(here("data","spatial_data_predict.csv"), header=TRUE)
#spatial<- read.csv(here("data","spatial_data.csv"), header=TRUE)
salmon <- read.csv(here("data","salmonscape","WA_integrated_Fish_dist_with_WADOE_basins.csv"),header=TRUE)
#housekeeping
#rm(list=ls())
options(stringsAsFactors = FALSE)
# Set working directory:
setwd("~/Documents/GitHub/recphen")
library("splines")
library("rstan")
library(mgcv)
#prepare for stan
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
#Read in WA rec data (just the early years for now)
d<-read.csv("analyses/output/wacrdat_1984_1993.csv", header=TRUE)#for now just use the old data
#prep the data for the model
source("analyses/wcrcstanleadin.R")
years<-unique(fishsum.yr$year)
quartz(height=8, width=20)
dat=fishsum
yr<-as.integer(as.factor(dat$year))
n_yr<-length(unique(yr))
#for (a in 1:length(regions)){
n_weeks<-length(unique(dat$week))
w<-as.integer(unique(dat$week))
X <- as.integer(dat$week) #weeks
spline_degree <- 3
#Currently choosing knot location and fitting the B-spline before fitting the stan model
#Setting knots every 6 weeks- why? I don't know!; this yields 11 knots plus the two boundary knots
B <- t(bs(w, knots=seq(1,52,6), degree=spline_degree, intercept = TRUE)) # creating the B-splines
N <- length(X);
num_basis <- nrow(B)
Y <- log(dat$chin+.001)
OFFSET<-log(dat$anglers)
Y<-Y.offset<- log(dat$chin+.001)/log(dat$anglers+.001)
reg<-as.integer(dat$region)
smml<-stan_model("analyses/recmodml_AOS.stan")
fitml<-sampling(smml,iter=1000,control = list(adapt_delta=0.99,max_treedepth=15))
#plot(fit)
ffml<-extract(fitml)
ffml.sum<-summary(fitml)$summary
ffml.sum[grep("a0",rownames(ffml.sum)),]#0.123,0.016,0.019,-0.23,0.054,0.122
pairs(fitml)
quartz()
pairs(fitml)
pairs(fitml)
plot(fitml)
#plot(fitml)
ffml<-extract(fitml)
ffml.sum<-summary(fitml)$summary
ffml.sum[grep("a0",rownames(ffml.sum)),]#0.123,0.016,0.019,-0.23,0.054,0.122
ffml.sum[grep("mu",rownames(ffml.sum)),]#0.0179
#much lower than a0 in the non-multilevel model- is this ok?
#ff.sum[grep("a0",rownames(ff.sum)),1]#0.6458231
ffml.sum[grep("sigma",rownames(ffml.sum)),]#sigma:758; sigma_a_yr: 1.514
range(ffml.sum[grep("a_raw",rownames(ffml.sum)),1])#-1.70304100  0.01866892
range(ffml$Y_hat_log)#-596.0600  283.7359
range(ffml$Y_hat_log)#0.4616113 0.8527236;
median(ffml$Y_hat_log)
quantile(ffml$Y_hat_log,probs = 0.25)
quantile(ffml$Y_hat_log,probs = 0.75)
years
fishsum.yr<-fishsum.yr[fishsum.yr$year!="1991",]
years<-unique(fishsum.yr$year)
years
quartz(height=8, width=20)
dat=fishsum
yr<-as.integer(as.factor(dat$year))
#quartz(height=8, width=20)
dat=fishsum[fishsum$year!="1991",]
years<-unique(fishsum$year)
years
#quartz(height=8, width=20)
dat=fishsum[fishsum$year!="1991",]
years<-unique(dat$year)
years
yr<-as.integer(as.factor(dat$year))
n_yr<-length(unique(yr))
#for (a in 1:length(regions)){
n_weeks<-length(unique(dat$week))
n_weeks<-length(unique(dat$week))
#Currently choosing knot location and fitting the B-spline before fitting the stan model
#Setting knots every 6 weeks- why? I don't know!; this yields 11 knots plus the two boundary knots
B <- t(bs(w, knots=seq(1,52,6), degree=spline_degree, intercept = TRUE)) # creating the B-splines
N <- length(X);
num_basis <- nrow(B)
Y <- log(dat$chin+.001)
OFFSET<-log(dat$anglers)
Y<-Y.offset<- log(dat$chin+.001)/log(dat$anglers+.001)
reg<-as.integer(dat$region)
smml<-stan_model("analyses/recmodml_AOS.stan")
fitml<-sampling(smml,iter=1000,control = list(adapt_delta=0.99,max_treedepth=15))
#simulate some salmon catch data and fit splits to it
#super useful markdown file on splines in stan!
#https://github.com/milkha/Splines_in_Stan/blob/master/splines_in_stan.Rmd
#https://mc-stan.org/users/documentation/case-studies/splines_in_stan.html
#housekeeping
#rm(list=ls())
options(stringsAsFactors = FALSE)
# Set working directory:
setwd("~/Documents/GitHub/recphen")
# Load libraries
library("splines")
library("rstan")
library(mgcv)
#prepare for stan
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
#Read in WA rec data (just the early years for now)
d<-read.csv("analyses/output/wacrdat_1984_1993.csv", header=TRUE)#for now just use the old data
#prep the data for the model
source("analyses/wcrcstanleadin.R")
#quartz(height=8, width=20)
dat=fishsum[fishsum$year!="1991",]
#remove 1991 for now because so many 0s
years<-unique(dat$year)
yr<-as.integer(as.factor(dat$year))
n_yr<-length(unique(yr))
n_weeks<-length(unique(dat$week))
w<-as.integer(unique(dat$week))
X <- as.integer(dat$week) #weeks
spline_degree <- 3
#could add a smoothing prior (to help with overfitting): https://mc-stan.org/users/documentation/case-studies/splines_in_stan.html
#Currently choosing knot location and fitting the B-spline before fitting the stan model
#Setting knots every 6 weeks- why? I don't know!; this yields 11 knots plus the two boundary knots
B <- t(bs(w, knots=seq(1,52,6), degree=spline_degree, intercept = TRUE)) # creating the B-splines
N <- length(X);
num_basis <- nrow(B)
Y <- log(dat$chin+.001)
OFFSET<-log(dat$anglers)
Y<-Y.offset<- log(dat$chin+.001)/log(dat$anglers+.001)
reg<-as.integer(dat$region)
smml<-stan_model("analyses/recmodml_AOS.stan")
fitml<-sampling(smml,iter=1000,control = list(adapt_delta=0.99,max_treedepth=15))
library(shinystan)
smml<-stan_model("analyses/recmodml_AOS.stan")
