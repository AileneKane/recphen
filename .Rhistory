#make a map that shows the shifts for each phenophase
#For now just plot lat longs of points as xs and ys
#Chinook first:
spat<-shifts[shifts$sp="CH",]
#make a map that shows the shifts for each phenophase
#For now just plot lat longs of points as xs and ys
#Chinook first:
spdat<-shifts[shifts$sp=="CH",]
plot(spdat$lon,spdat$lat,type="p",pch="21")
plot(spdat$lon,spdat$lat,type="p",pch=21)
points(spdat$lon,spdat$lat,type="p",pch=21,bg="black")
which(sign(shifts$first.yrlci)==sign(shifts$first.yruci))
sign(shifts$first.yrlci
)
first.earlier<-which(sign(shifts$first.yrlci)<0 & sign(shifts$first.yrlci)==sign(shifts$first.yruci))
points(spdat$lon[first.earlier],spdat$lat[first.earlier],type="p",pch=21,bg="darkred")
quartz()
plot(spdat$lon,spdat$lat,type="p",pch=21)
first.earlier<-which(sign(shifts$first.yrlci)<0 & sign(shifts$first.yrlci)==sign(shifts$first.yruci))
points(spdat$lon[first.earlier],spdat$lat[first.earlier],type="p",pch=21,bg="darkred")
first.later<-which(sign(shifts$first.yrlci)>0 & sign(shifts$first.yrlci)==sign(shifts$first.yruci))
points(spdat$lon[first.later],spdat$lat[first.later],type="p",pch=21,bg="lightblue")
sign(shifts$first.yrlci)>0
which(sign(shifts$first.yrlci)>0
)
sign(shifts$first.yrlci)==sign(shifts$first.yruci)
sign(shifts$first.yrlci)==sign(shifts$first.yruci)
which(sign(shifts$first.yrlci)==sign(shifts$first.yruci))
length(which(sign(shifts$first.yrlci)==sign(shifts$first.yruci)))
which(sign(shifts$first.yrlci)>0 & sign(shifts$first.yrlci)==sign(shifts$first.yruci))
length(which(sign(shifts$first.yrlci)>0 & sign(shifts$first.yrlci)==sign(shifts$first.yruci)))
;length(which(sign(shifts$first.yrlci)<0 & sign(shifts$first.yrlci)==sign(shifts$first.yruci)))
length(which(sign(shifts$first.yrlci)<0 & sign(shifts$first.yrlci)==sign(shifts$first.yruci)))
spdat$lon[first.earlier]
quartz()
plot(spdat$lon,spdat$lat,type="p",pch=21)
first.earlier<-which(sign(spdat$first.yrlci)<0 & sign(spdat$first.yrlci)==sign(spdat$first.yruci))
first.later<-which(sign(spdat$first.yrlci)>0 & sign(spdat$first.yrlci)==sign(spdat$first.yruci))
points(spdat$lon[first.earlier],spdat$lat[first.earlier],type="p",pch=21,bg="darkred")
points(spdat$lon[first.later],spdat$lat[first.later],type="p",pch=21,bg="lightblue")
quartz(height=10, width=25)
par(mfrow=c(1,4), oma=c(1,1,1,1))
plot(spdat$lon,spdat$lat,type="p",pch=21, xlab="Longitude",ylab="Latitude")
first.earlier<-which(sign(spdat$first.yrlci)<0 & sign(spdat$first.yrlci)==sign(spdat$first.yruci))
first.later<-which(sign(spdat$first.yrlci)>0 & sign(spdat$first.yrlci)==sign(spdat$first.yruci))
points(spdat$lon[first.earlier],spdat$lat[first.earlier],type="p",pch=21,bg="darkred")
points(spdat$lon[first.later],spdat$lat[first.later],type="p",pch=21,bg="lightblue")
plot(spdat$lon,spdat$lat,type="p",pch=21, xlab="Longitude",ylab="Latitude", cex.pch=2)
plot(spdat$lon,spdat$lat,type="p",pch=21, xlab="Longitude",ylab="Latitude", cex=2)
first.earlier<-which(sign(spdat$first.yrlci)<0 & sign(spdat$first.yrlci)==sign(spdat$first.yruci), cex=2)
first.later<-which(sign(spdat$first.yrlci)>0 & sign(spdat$first.yrlci)==sign(spdat$first.yruci), cex=2)
quartz(height=10, width=25)
par(mfrow=c(1,4), oma=c(1,1,1,1))
plot(spdat$lon,spdat$lat,type="p",pch=21, xlab="Longitude",ylab="Latitude", cex=2)
first.earlier<-which(sign(spdat$first.yrlci)<0 & sign(spdat$first.yrlci)==sign(spdat$first.yruci))
first.later<-which(sign(spdat$first.yrlci)>0 & sign(spdat$first.yrlci)==sign(spdat$first.yruci))
points(spdat$lon[first.earlier],spdat$lat[first.earlier],type="p",pch=21,bg="darkred", cex=2)
points(spdat$lon[first.later],spdat$lat[first.later],type="p",pch=21,bg="lightblue", cex=2)
phase<-c("first","last","mid","peak")
head(spdat)
spdat[,6]
colname(spdat)[,]6]
colname(spdat)[6]
colnames(spdat)[6]
colnames(spdat)[7]
colnames(spdat)[10]
colnames(spdat)[12]
colnames(spdat)[13]
colnames(spdat)[19]
colnames(spdat)[25]
p=1
spdat[,phasecols[p]
]
phasecols<-c(7,13,19,25)
spdat[,phasecols[p]]
spdat$first.yrlci
quartz(height=10, width=25)
par(mfrow=c(1,4), oma=c(1,1,1,1))
phase<-c("first","last","mid","peak")
phasecols<-c(7,13,19,25)
for(p in 1:length(phase)){
plot(spdat$lon,spdat$lat,type="p",pch=21, xlab="Longitude",ylab="Latitude", cex=2)
#select out the sites with credible intervals that do not overlap 0 and split them into earlier and later
earlier<-which(sign(spdat[,phasecols[p]])<0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p+1]]))
later<-which(sign(spdat[,phasecols[p]])>0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]]+1))
points(spdat$lon[earlier],spdat$lat[earlier],type="p",pch=21,bg="darkred", cex=2)
points(spdat$lon[later],spdat$lat[later],type="p",pch=21,bg="lightblue", cex=2)
}
spdat[,phasecols[p]:phasecols[p+1]]
p
phasecols[p]
phasecols[p+1]
quartz(height=10, width=25)
par(mfrow=c(1,4), oma=c(1,1,1,1))
phase<-c("first","last","mid","peak")
phasecols<-c(7,13,19,25)
for(p in 1:length(phase)){
plot(spdat$lon,spdat$lat,type="p",pch=21, xlab="Longitude",ylab="Latitude", cex=2)
#select out the sites with credible intervals that do not overlap 0 and split them into earlier and later
earlier<-which(sign(spdat[,phasecols[p]])<0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
later<-which(sign(spdat[,phasecols[p]])>0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
points(spdat$lon[earlier],spdat$lat[earlier],type="p",pch=21,bg="darkred", cex=2)
points(spdat$lon[later],spdat$lat[later],type="p",pch=21,bg="lightblue", cex=2)
}
sp<-unique(shifts$sp)
quartz(height=15, width=25)
par(mfrow=c(3,4), oma=c(1,1,1,1))
phase<-c("first","last","mid","peak")
phasecols<-c(7,13,19,25)
sp<-unique(shifts$sp)
for(s in 1:length(sp)){
spdat<-shifts[shifts$sp==sp[s],]
for(p in 1:length(phase)){
plot(spdat$lon,spdat$lat,type="p",pch=21, xlab="Longitude",ylab="Latitude", cex=2, main=paste(phase[p],sp[s]))
#select out the sites with credible intervals that do not overlap 0 and split them into earlier and later
earlier<-which(sign(spdat[,phasecols[p]])<0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
later<-which(sign(spdat[,phasecols[p]])>0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
points(spdat$lon[earlier],spdat$lat[earlier],type="p",pch=21,bg="darkred", cex=2)
points(spdat$lon[later],spdat$lat[later],type="p",pch=21,bg="lightblue", cex=2)
}
}
library(usmap)
install.packages("usmap")
library(usmap)
library(rworldmap)
library(rworldmap)
install.packages("rworldmap")
library(rworldmap)
newmap <- getMap(resolution = "low")
Then we can easily lay the airports over the map:
range(shifts$lat)
Then we can easily lay the airports over the map:
range(shifts$lat, na.rm=TRUE)
Then we can easily lay the airports over the map:
range(shifts$lon, na.rm=TRUE)
plot(newmap, xlim = c(-125, -117), ylim = c(45, 49), asp = 1)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-125, -117), ylim = c(45, 49), asp = 1)
points(spdat$lon,spdat$lat,type="p",pch=21, cex=2)
m = map("Washington", fill = TRUE, plot = FALSE)
m = getMap("Washington", fill = TRUE, plot = FALSE)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-125, -117), ylim = c(45, 49), asp = 1)
points(spdat$lon,spdat$lat,type="p",pch=21, cex=2)
newmap <- getMap(resolution = "coars")
newmap <- getMap(resolution = "coarse")
plot(newmap, xlim = c(-125, -117), ylim = c(45, 49), asp = 1)
points(spdat$lon,spdat$lat,type="p",pch=21, cex=2)
quartz(height=15, width=25)
par(mfrow=c(3,4), oma=c(1,1,1,1))
phase<-c("first","last","mid","peak")
phasecols<-c(7,13,19,25)
sp<-unique(shifts$sp)
for(s in 1:length(sp)){
spdat<-shifts[shifts$sp==sp[s],]
for(p in 1:length(phase)){
plot(spdat$lon,spdat$lat,type="p",pch=21, xlab="Longitude",ylab="Latitude", cex=2, main=paste(phase[p],sp[s]))
#select out the sites with credible intervals that do not overlap 0 and split them into earlier and later
earlier<-which(sign(spdat[,phasecols[p]])<0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
later<-which(sign(spdat[,phasecols[p]])>0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
points(spdat$lon[earlier],spdat$lat[earlier],type="p",pch=21,bg="darkred", cex=2)
points(spdat$lon[later],spdat$lat[later],type="p",pch=21,bg="lightblue", cex=2)
}
}
#make a map that shows the shifts for each phenophase
#For now just plot lat longs of points as xs and ys
#Chinook first:
figname<-paste("analyses/figures/wdfw_returns/",species[s],".shifts.map.pdf", sep="")
pdf(figname,height=10, width=25)
figname<-paste("analyses/figures/wdfw_returns/",species[s],".shifts.map.pdf", sep="")
pdf(figname,height=10, width=25)
#quartz(height=15, width=25)
par(mfrow=c(3,4), oma=c(1,1,1,1))
phase<-c("first","last","mid","peak")
phasecols<-c(7,13,19,25)
sp<-unique(shifts$sp)
for(s in 1:length(sp)){
spdat<-shifts[shifts$sp==sp[s],]
for(p in 1:length(phase)){
plot(spdat$lon,spdat$lat,type="p",pch=21, xlab="Longitude",ylab="Latitude", cex=2, main=paste(phase[p],sp[s]))
#select out the sites with credible intervals that do not overlap 0 and split them into earlier and later
earlier<-which(sign(spdat[,phasecols[p]])<0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
later<-which(sign(spdat[,phasecols[p]])>0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
points(spdat$lon[earlier],spdat$lat[earlier],type="p",pch=21,bg="darkred", cex=2)
points(spdat$lon[later],spdat$lat[later],type="p",pch=21,bg="lightblue", cex=2)
}
}
dev.off()
#make a map that shows the shifts for each phenophase
#For now just plot lat longs of points as xs and ys
#Chinook first:
figname<-paste("analyses/figures/wdfw_returns/salmon.shifts.map.pdf")
pdf(figname,height=10, width=25)
#quartz(height=15, width=25)
par(mfrow=c(3,4), oma=c(1,1,1,1))
phase<-c("first","last","mid","peak")
phasecols<-c(7,13,19,25)
sp<-unique(shifts$sp)
for(s in 1:length(sp)){
spdat<-shifts[shifts$sp==sp[s],]
for(p in 1:length(phase)){
plot(spdat$lon,spdat$lat,type="p",pch=21, xlab="Longitude",ylab="Latitude", cex=2, main=paste(phase[p],sp[s]))
#select out the sites with credible intervals that do not overlap 0 and split them into earlier and later
earlier<-which(sign(spdat[,phasecols[p]])<0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
later<-which(sign(spdat[,phasecols[p]])>0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
points(spdat$lon[earlier],spdat$lat[earlier],type="p",pch=21,bg="darkred", cex=2)
points(spdat$lon[later],spdat$lat[later],type="p",pch=21,bg="lightblue", cex=2)
}
}
dev.off()
library(rworldmap)
newmap <- getMap(resolution = "coarse")
plot(newmap, xlim = c(-125, -117), ylim = c(45, 49), asp = 1)
points(spdat$lon,spdat$lat,type="p",pch=21, cex=2)
points(airports$lon, airports$lat, col = "red", cex = .6)
quartz(height=15, width=25)
par(mfrow=c(3,4), oma=c(1,1,1,1))
plot(newmap, xlim = c(-125, -117), ylim = c(45, 49), asp = 1)
points(spdat$lon,spdat$lat,type="p",pch=21, cex=2)
points(spdat$lon[earlier],spdat$lat[earlier],type="p",pch=21,bg="darkred", cex=2)
points(spdat$lon[later],spdat$lat[later],type="p",pch=21,bg="lightblue", cex=2)
newmap <- getMap(resolution = "low")
quartz(height=15, width=25)
par(mfrow=c(3,4), oma=c(1,1,1,1))
plot(newmap, xlim = c(-125, -117), ylim = c(45, 49), asp = 1)
points(spdat$lon,spdat$lat,type="p",pch=21, cex=2)
points(spdat$lon[earlier],spdat$lat[earlier],type="p",pch=21,bg="darkred", cex=2)
points(spdat$lon[later],spdat$lat[later],type="p",pch=21,bg="lightblue", cex=2)
figname<-paste("analyses/figures/wdfw_returns/salmon.shifts.mapwa.pdf")
pdf(figname,height=10, width=25)
#quartz(height=15, width=25)
par(mfrow=c(3,4), oma=c(1,1,1,1))
for(s in 1:length(sp)){
spdat<-shifts[shifts$sp==sp[s],]
for(p in 1:length(phase)){
plot(newmap, xlim = c(-125, -117), ylim = c(45, 49), asp = 1,main=paste(phase[p],sp[s]))
points(spdat$lon,spdat$lat,type="p",pch=21, cex=2)
#select out the sites with credible intervals that do not overlap 0 and split them into earlier and later
earlier<-which(sign(spdat[,phasecols[p]])<0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
later<-which(sign(spdat[,phasecols[p]])>0 & sign(spdat[,phasecols[p]])==sign(spdat[,phasecols[p]+1]))
points(spdat$lon[earlier],spdat$lat[earlier],type="p",pch=21,bg="darkred", cex=2)
points(spdat$lon[later],spdat$lat[later],type="p",pch=21,bg="lightblue", cex=2)
}
}
dev.off()
#housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
# Set working directory:
setwd("~/Documents/GitHub/recphen")
library("splines")
library("rstan")
#prepare for stan
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
#Read in WA rec data (just the early years for now)
d<-read.csv("analyses/output/wacrdat_1984_1993.csv", header=TRUE)#for now just use the old data
#prep the data for the model
source("analyses/wcrcstanleadin.R")
#try one year at a time for now
years<-unique(fishsum.yr$year)
quartz(height=8, width=20)
par(mfrow=c(2,3))
#fit a separate model for each year (for all sites in puget sound)
for (y in 1:length(years)){
dat=fishsum.yr[fishsum.yr$year==years[y],]
X <- as.integer(dat$week) #weeks
#num_knots <- 13 #11 interior knots and 2 boundary knots
spline_degree <- 3
#num_basis <- num_knots + spline_degree - 1
#could add a smoothing prior (to help with overfitting): https://mc-stan.org/users/documentation/case-studies/splines_in_stan.html
#Currently choosing knot location and fitting the B-spline before fitting the stan model
#Setting knots every 5 weeks- why? I don't know!; this yields 11 knots plus the two boundary knots
B <- t(bs(X, knots=seq(1,52,4), degree=spline_degree, intercept = TRUE)) # creating the B-splines
num_data <- length(X); num_basis <- nrow(B)
Y <- log(dat$chin+.001)
OFFSET<-log(dat$anglers)
Y<-Y.offset<- log(dat$chin+.001)/log(dat$anglers)
sm<-stan_model("analyses/recmod.stan")
fit<-sampling(sm,iter=500,control = list(adapt_delta=0.95))
#plot(fit)
ff<-extract(fit)
Y_hat_med <- array(NA, length(Y))
Y_hat_ub <- array(NA, length(Y))
Y_hat_lb <- array(NA, length(Y))
for (i in 1:length(Y)) {
Y_hat_med[i] <- median(ff$Y_hat_log[,i]);
Y_hat_lb[i] <- quantile(ff$Y_hat_log[,i],probs = 0.25)
Y_hat_ub[i] <- quantile(ff$Y_hat_log[,i],probs = 0.75)
}
plot(X,Y, col="azure4", type="p",pch=21,xlab="week", ylab="log(chincatch)",bty="l", main=paste(years[y]), ylim=c(0.4,1.2))
polygon(c(rev(X), X), c(rev(Y_hat_lb), Y_hat_ub), col = 'grey80', border = NA)
lines(X, Y_hat_med, col="Red", lw=2)
}
X
max(Y_hat_med[20:40])
x[max(Y_hat_med[20:40])]
X[max(Y_hat_med[20:40])]
X[which(max(Y_hat_med[20:40]))]
X[which(Y_hat_med[20:40]==max(Y_hat_med[20:40]))]
which(Y_hat_med[20:40]==max(Y_hat_med[20:40]))
which(Y_hat_med==max(Y_hat_med[20:40]))
print(paste("peak abundance, between weeks 20:40"),which(Y_hat_med==max(Y_hat_med[20:40])))
which(Y_hat_med==max(Y_hat_med[20:40]))
print(paste("peak abundance, between weeks 20:40",which(Y_hat_med==max(Y_hat_med[20:40])), sep="")
}
print(paste("peak abundance, between weeks 20:40",which(Y_hat_med==max(Y_hat_med[20:40])), sep="")
print(paste("peak abundance, between weeks 20:40",which(Y_hat_med==max(Y_hat_med[20:40])), sep=""))
print(paste("peak abundance, between weeks 20:40",which(Y_hat_med==max(Y_hat_med[20:40])), sep=""))
print(paste("peak abundance week, between weeks 10-20:",which(Y_hat_med==max(Y_hat_med[10:20])), sep=""))
print(paste("peak abundance week, between weeks 20-40:",which(Y_hat_med==max(Y_hat_med[20:40])), sep=""))
print(paste("peak abundance week, between weeks 40-52:",which(Y_hat_med==max(Y_hat_med[40:53])), sep=""))
print(paste("peak abundance week:",which(Y_hat_med==max(Y_hat_med)), sep=""))
quartz(height=8, width=20)
par(mfrow=c(2,3))
#fit a separate model for each year (for all sites in puget sound)
for (y in 1:length(years)){
dat=fishsum.yr[fishsum.yr$year==years[y],]
X <- as.integer(dat$week) #weeks
#num_knots <- 13 #11 interior knots and 2 boundary knots
spline_degree <- 3
#num_basis <- num_knots + spline_degree - 1
#could add a smoothing prior (to help with overfitting): https://mc-stan.org/users/documentation/case-studies/splines_in_stan.html
#Currently choosing knot location and fitting the B-spline before fitting the stan model
#Setting knots every 5 weeks- why? I don't know!; this yields 11 knots plus the two boundary knots
B <- t(bs(X, knots=seq(1,52,4), degree=spline_degree, intercept = TRUE)) # creating the B-splines
num_data <- length(X); num_basis <- nrow(B)
Y <- log(dat$chin+.001)
OFFSET<-log(dat$anglers)
Y<-Y.offset<- log(dat$chin+.001)/log(dat$anglers)
sm<-stan_model("analyses/recmod.stan")
fit<-sampling(sm,iter=500,control = list(adapt_delta=0.95))
#plot(fit)
ff<-extract(fit)
Y_hat_med <- array(NA, length(Y))
Y_hat_ub <- array(NA, length(Y))
Y_hat_lb <- array(NA, length(Y))
for (i in 1:length(Y)) {
Y_hat_med[i] <- median(ff$Y_hat_log[,i]);
Y_hat_lb[i] <- quantile(ff$Y_hat_log[,i],probs = 0.25)
Y_hat_ub[i] <- quantile(ff$Y_hat_log[,i],probs = 0.75)
}
plot(X,Y, col="azure4", type="p",pch=21,xlab="week", ylab="log(chincatch)",bty="l", main=paste(years[y]), ylim=c(0.4,1.2))
polygon(c(rev(X), X), c(rev(Y_hat_lb), Y_hat_ub), col = 'grey80', border = NA)
lines(X, Y_hat_med, col="Red", lw=2)
print(paste("peak abundance week:",which(Y_hat_med==max(Y_hat_med)), sep=""))
print(paste("peak abundance week, between weeks 10-20:",which(Y_hat_med==max(Y_hat_med[10:20])), sep=""))
print(paste("peak abundance week, between weeks 20-40:",which(Y_hat_med==max(Y_hat_med[20:40])), sep=""))
print(paste("peak abundance week, between weeks 40-53:",which(Y_hat_med==max(Y_hat_med[40:53])), sep=""))
}
abline(v=which(Y_hat_med==max(Y_hat_med)), col="blue", lty=2)
abline(v=which(Y_hat_med==max(Y_hat_med)), col="blue", lty=2, lwd=2)
points(which(Y_hat_med==max(Y_hat_med)),1,pch=paste(which(Y_hat_med==max(Y_hat_med))))
points(which(Y_hat_med==max(Y_hat_med))+1,1,pch=paste(which(Y_hat_med==max(Y_hat_med))), col="blue")
points(which(Y_hat_med==max(Y_hat_med))+1,1,pch=paste(which(Y_hat_med==max(Y_hat_med))), col="blue", cex=2)
abline(v=which(Y_hat_med==max(Y_hat_med[10:20])), col="gray", lty=2, lwd=1)
points(which(Y_hat_med==max(Y_hat_med[10:20]))+1,1,pch=paste(which(Y_hat_med==max(Y_hat_med))), cex=1.2)
which(Y_hat_med==max(Y_hat_med))
quartz(height=8, width=20)
par(mfrow=c(2,3))
#fit a separate model for each year (for all sites in puget sound)
for (y in 1:length(years)){
dat=fishsum.yr[fishsum.yr$year==years[y],]
X <- as.integer(dat$week) #weeks
#num_knots <- 13 #11 interior knots and 2 boundary knots
spline_degree <- 3
#num_basis <- num_knots + spline_degree - 1
#could add a smoothing prior (to help with overfitting): https://mc-stan.org/users/documentation/case-studies/splines_in_stan.html
#Currently choosing knot location and fitting the B-spline before fitting the stan model
#Setting knots every 5 weeks- why? I don't know!; this yields 11 knots plus the two boundary knots
B <- t(bs(X, knots=seq(1,52,4), degree=spline_degree, intercept = TRUE)) # creating the B-splines
num_data <- length(X); num_basis <- nrow(B)
Y <- log(dat$chin+.001)
OFFSET<-log(dat$anglers)
Y<-Y.offset<- log(dat$chin+.001)/log(dat$anglers)
sm<-stan_model("analyses/recmod.stan")
fit<-sampling(sm,iter=500,control = list(adapt_delta=0.95))
#plot(fit)
ff<-extract(fit)
Y_hat_med <- array(NA, length(Y))
Y_hat_ub <- array(NA, length(Y))
Y_hat_lb <- array(NA, length(Y))
for (i in 1:length(Y)) {
Y_hat_med[i] <- median(ff$Y_hat_log[,i]);
Y_hat_lb[i] <- quantile(ff$Y_hat_log[,i],probs = 0.25)
Y_hat_ub[i] <- quantile(ff$Y_hat_log[,i],probs = 0.75)
}
plot(X,Y, col="azure4", type="p",pch=21,xlab="week", ylab="log(chincatch)",bty="l", main=paste(years[y]), ylim=c(0.4,1.2))
polygon(c(rev(X), X), c(rev(Y_hat_lb), Y_hat_ub), col = 'grey80', border = NA)
lines(X, Y_hat_med, col="Red", lw=2)
abline(v=which(Y_hat_med==max(Y_hat_med)), col="blue", lty=2, lwd=2)
points(which(Y_hat_med==max(Y_hat_med))+1,1,pch=as.character(paste(which(Y_hat_med==max(Y_hat_med)))), col="blue", cex=1.5)
abline(v=which(Y_hat_med==max(Y_hat_med[10:20])), col="gray", lty=2, lwd=1)
points(which(Y_hat_med==max(Y_hat_med[10:20]))+1,1,pch=as.character(paste(which(Y_hat_med==max(Y_hat_med[10:20])))), cex=1.2)
abline(v=which(Y_hat_med==max(Y_hat_med[20:40])), col="gray", lty=2, lwd=1)
points(which(Y_hat_med==max(Y_hat_med[20:40]))+1,1,pch=as.character(paste(which(Y_hat_med==max(Y_hat_med[20:40])))), cex=1.2)
abline(v=which(Y_hat_med==max(Y_hat_med[40:53])), col="gray", lty=2, lwd=1)
points(which(Y_hat_med==max(Y_hat_med[20:53]))+1,1,pch=as.character(paste(which(Y_hat_med==max(Y_hat_med[20:53])))), cex=1.2)
print(paste("peak abundance week:",which(Y_hat_med==max(Y_hat_med)), sep=""))
print(paste("peak abundance week, between weeks 10-20:",which(Y_hat_med==max(Y_hat_med[10:20])), sep=""))
print(paste("peak abundance week, between weeks 20-40:",which(Y_hat_med==max(Y_hat_med[20:40])), sep=""))
print(paste("peak abundance week, between weeks 40-53:",which(Y_hat_med==max(Y_hat_med[40:53])), sep=""))
}
which(Y_hat_med==max(Y_hat_med[20:53]))+1
which(Y_hat_med==max(Y_hat_med[20:53]))
max(Y_hat_med[20:53])
max(Y_hat_med[20:53, na.rm=TRUE])
max(Y_hat_med[20:53], na.rm=TRUE)
#Read in WA rec data (just the early years for now)
d<-read.csv("analyses/output/wacrdat_1984_1993.csv", header=TRUE)#for now just use the old data
#prep the data for the model
source("analyses/wcrcstanleadin.R")
#try one year at a time for now
years<-unique(fishsum.yr$year)
quartz(height=8, width=20)
par(mfrow=c(2,3))
#fit a separate model for each year (for all sites in puget sound)
for (y in 1:length(years)){
dat=fishsum.yr[fishsum.yr$year==years[y],]
X <- as.integer(dat$week) #weeks
#num_knots <- 13 #11 interior knots and 2 boundary knots
spline_degree <- 3
#num_basis <- num_knots + spline_degree - 1
#could add a smoothing prior (to help with overfitting): https://mc-stan.org/users/documentation/case-studies/splines_in_stan.html
#Currently choosing knot location and fitting the B-spline before fitting the stan model
#Setting knots every 5 weeks- why? I don't know!; this yields 11 knots plus the two boundary knots
B <- t(bs(X, knots=seq(1,52,4), degree=spline_degree, intercept = TRUE)) # creating the B-splines
num_data <- length(X); num_basis <- nrow(B)
Y <- log(dat$chin+.001)
OFFSET<-log(dat$anglers)
Y<-Y.offset<- log(dat$chin+.001)/log(dat$anglers)
sm<-stan_model("analyses/recmod.stan")
fit<-sampling(sm,iter=500,control = list(adapt_delta=0.95))
#plot(fit)
ff<-extract(fit)
Y_hat_med <- array(NA, length(Y))
Y_hat_ub <- array(NA, length(Y))
Y_hat_lb <- array(NA, length(Y))
for (i in 1:length(Y)) {
Y_hat_med[i] <- median(ff$Y_hat_log[,i]);
Y_hat_lb[i] <- quantile(ff$Y_hat_log[,i],probs = 0.25)
Y_hat_ub[i] <- quantile(ff$Y_hat_log[,i],probs = 0.75)
}
plot(X,Y, col="azure4", type="p",pch=21,xlab="week", ylab="log(chincatch)",bty="l", main=paste(years[y]), ylim=c(0.4,1.2))
polygon(c(rev(X), X), c(rev(Y_hat_lb), Y_hat_ub), col = 'grey80', border = NA)
lines(X, Y_hat_med, col="Red", lw=2)
abline(v=which(Y_hat_med==max(Y_hat_med)), col="blue", lty=2, lwd=2)
points(which(Y_hat_med==max(Y_hat_med))+1,1,pch=as.character(paste(which(Y_hat_med==max(Y_hat_med)))), col="blue", cex=1.5)
abline(v=which(Y_hat_med==max(Y_hat_med[10:20], na.rm=TRUE)), col="gray", lty=2, lwd=1)
points(which(Y_hat_med==max(Y_hat_med[10:20], na.rm=TRUE))+1,1,pch=as.character(paste(which(Y_hat_med==max(Y_hat_med[10:20], na.rm=TRUE)))), cex=1.2)
abline(v=which(Y_hat_med==max(Y_hat_med[20:40], na.rm=TRUE)), col="gray", lty=2, lwd=1)
points(which(Y_hat_med==max(Y_hat_med[20:40], na.rm=TRUE))+1,1,pch=as.character(paste(which(Y_hat_med==max(Y_hat_med[20:40], na.rm=TRUE)))), cex=1.2)
abline(v=which(Y_hat_med==max(Y_hat_med[40:53], na.rm=TRUE)), col="gray", lty=2, lwd=1)
points(which(Y_hat_med==max(Y_hat_med[20:53], na.rm=TRUE))+1,1,pch=as.character(paste(which(Y_hat_med==max(Y_hat_med[20:53], na.rm=TRUE)))), cex=1.2)
print(paste("peak abundance week:",which(Y_hat_med==max(Y_hat_med)), sep=""))
print(paste("peak abundance week, between weeks 10-20:",which(Y_hat_med==max(Y_hat_med[10:20], na.rm=TRUE)), sep=""))
print(paste("peak abundance week, between weeks 20-40:",which(Y_hat_med==max(Y_hat_med[20:40], na.rm=TRUE)), sep=""))
print(paste("peak abundance week, between weeks 40-53:",which(Y_hat_med==max(Y_hat_med[40:53], na.rm=TRUE)), sep=""))
}
which(Y_hat_med==max(Y_hat_med[20:53], na.rm=TRUE)
)
as.character(paste(which(Y_hat_med==max(Y_hat_med[20:53], na.rm=TRUE)))
)
as.character(paste(which(Y_hat_med==max(Y_hat_med[10:20], na.rm=TRUE))))
as.character(paste(which(Y_hat_med==max(Y_hat_med)))
)
text(which(Y_hat_med==max(Y_hat_med[20:53], na.rm=TRUE))+1,1,labels=as.character(paste(which(Y_hat_med==max(Y_hat_med[20:53], na.rm=TRUE)))), cex=1.2)
quartz(height=8, width=20)
par(mfrow=c(2,3))
#fit a separate model for each year (for all sites in puget sound)
for (y in 1:length(years)){
dat=fishsum.yr[fishsum.yr$year==years[y],]
X <- as.integer(dat$week) #weeks
#num_knots <- 13 #11 interior knots and 2 boundary knots
spline_degree <- 3
#num_basis <- num_knots + spline_degree - 1
#could add a smoothing prior (to help with overfitting): https://mc-stan.org/users/documentation/case-studies/splines_in_stan.html
#Currently choosing knot location and fitting the B-spline before fitting the stan model
#Setting knots every 5 weeks- why? I don't know!; this yields 11 knots plus the two boundary knots
B <- t(bs(X, knots=seq(1,52,4), degree=spline_degree, intercept = TRUE)) # creating the B-splines
num_data <- length(X); num_basis <- nrow(B)
Y <- log(dat$chin+.001)
OFFSET<-log(dat$anglers)
Y<-Y.offset<- log(dat$chin+.001)/log(dat$anglers)
sm<-stan_model("analyses/recmod.stan")
fit<-sampling(sm,iter=500,control = list(adapt_delta=0.95))
#plot(fit)
ff<-extract(fit)
Y_hat_med <- array(NA, length(Y))
Y_hat_ub <- array(NA, length(Y))
Y_hat_lb <- array(NA, length(Y))
for (i in 1:length(Y)) {
Y_hat_med[i] <- median(ff$Y_hat_log[,i]);
Y_hat_lb[i] <- quantile(ff$Y_hat_log[,i],probs = 0.25)
Y_hat_ub[i] <- quantile(ff$Y_hat_log[,i],probs = 0.75)
}
plot(X,Y, col="azure4", type="p",pch=21,xlab="week", ylab="log(chincatch)",bty="l", main=paste(years[y]), ylim=c(0.4,1.2))
polygon(c(rev(X), X), c(rev(Y_hat_lb), Y_hat_ub), col = 'grey80', border = NA)
lines(X, Y_hat_med, col="Red", lw=2)
abline(v=which(Y_hat_med==max(Y_hat_med)), col="blue", lty=2, lwd=2)
text(which(Y_hat_med==max(Y_hat_med))+1,1,labels=as.character(paste(which(Y_hat_med==max(Y_hat_med)))), col="blue", cex=1.5)
abline(v=which(Y_hat_med==max(Y_hat_med[10:20], na.rm=TRUE)), col="gray", lty=2, lwd=1)
text(which(Y_hat_med==max(Y_hat_med[10:20], na.rm=TRUE))+1,1,labels=as.character(paste(which(Y_hat_med==max(Y_hat_med[10:20], na.rm=TRUE)))), cex=1.2)
abline(v=which(Y_hat_med==max(Y_hat_med[20:40], na.rm=TRUE)), col="gray", lty=2, lwd=1)
text(which(Y_hat_med==max(Y_hat_med[20:40], na.rm=TRUE))+1,1,labels=as.character(paste(which(Y_hat_med==max(Y_hat_med[20:40], na.rm=TRUE)))), cex=1.2)
abline(v=which(Y_hat_med==max(Y_hat_med[40:53], na.rm=TRUE)), col="gray", lty=2, lwd=1)
text(which(Y_hat_med==max(Y_hat_med[20:53], na.rm=TRUE))+1,1,labels=as.character(paste(which(Y_hat_med==max(Y_hat_med[20:53], na.rm=TRUE)))), cex=1.2)
print(paste("peak abundance week:",which(Y_hat_med==max(Y_hat_med)), sep=""))
print(paste("peak abundance week, between weeks 10-20:",which(Y_hat_med==max(Y_hat_med[10:20], na.rm=TRUE)), sep=""))
print(paste("peak abundance week, between weeks 20-40:",which(Y_hat_med==max(Y_hat_med[20:40], na.rm=TRUE)), sep=""))
print(paste("peak abundance week, between weeks 40-53:",which(Y_hat_med==max(Y_hat_med[40:53], na.rm=TRUE)), sep=""))
}
